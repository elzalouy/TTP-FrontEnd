import { Task, TaskMovement } from "../models/Projects";

export type Journey = {
  clientId?: string;
  projectManager?: string;
  categoryId: string;
  taskId: string;
  index: number;
  movements: TaskMovement[];
  leadTime?: number;
  teamId?: string;
  sharedAtMonth?: string;
  sharedAt?: string;
  reviewAt?: string;
  reviewAtMonth?: string;
  journeyFinishedAt: string | null;
  journeyFinishedAtDate?: Date | null;
  revision: boolean;
  startedAt: Date | string;
  startedAtMonth?: Date | string;
  unique: boolean;
  boardId: string;
  journeyDeadline: Date | null;
  cardCreatedAt: Date | string;
  journeyDeadlines: (Date | string)[];
};
export type Journies = Journey[];
export interface ITaskInfo extends Task {
  clientId?: string;
  projectManager?: string;
}

export type TaskJourniesDetails = {
  id: string;
  name: string;
  journeyIndex: number;
  projectName: string;
  clientName: string;
  categoryName: string;
  subCategoryName: string;
  status: string;
  projectManager: string;
  startDate: string;
  dueDate: string;
  movementsCount: number;
  journeyLeadTime: string;
  journeyProcessingTime: string;
  journeySchedulingTime: string;
  journeyUnClearCounts: number;
  journeyUnClearTime: string;
  journeyTurnAroundTime: string;
  journeyFullfilmentTime: string;
  journeyDeliveryTime: string;
  journeyClosingTime: string;
  journeyCanceled: boolean;
  journeyDisturbed: boolean;
  journeyFlagged: boolean;
  journeyLateScheduling: boolean;
  missedDelivery: boolean;
  journeyVerified: boolean;
  journeyUnHealthy: boolean;
  journeyClearBackTime: string;
  wrongOrMissingFulfillmentTimes: string;
  wrongOrMissingFulfillmentTime: string;
  commentsOrChangesTime: string;
  commentsOrChangesTimes: string;
  revisitingTime: string;
  revisitingTimes: string;
  revivedTime: string;
  revivedTimes: string;
  deliveryStatus: string;
};
